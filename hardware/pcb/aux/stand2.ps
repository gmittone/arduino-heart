%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Wed Apr  3 14:30:43 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: A4 595 842 0 () ()
%%BoundingBox: 0 0 279 215
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: A4
%%PageBoundingBox: 0 0 279 215
595 843 cairo_set_page_size
%%EndPageSetup
q 0 0 279 215 rectclip
1 0 0 -1 0 843 cm q
0 g
1.44 w
1 J
1 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
0 841.98 m 277.738 841.98 l S Q
q 1 0 0 1 0 0 cm
0 841.98 m 3.023 832.73 6.043 823.781 9.066 815.137 c 12.289 805.914 15.512
 797.035 18.734 788.504 c 22.199 779.32 25.668 770.535 29.133 762.148 c 
32.91 753.02 36.684 744.363 40.457 736.176 c 44.625 727.129 48.797 718.656
 52.969 710.758 c 57.676 701.84 62.387 693.656 67.094 686.203 c 72.578 677.527
 78.063 669.844 83.547 663.156 c 90.215 655.023 96.883 648.363 103.547 643.172
 c 111.922 636.648 120.297 632.449 128.668 630.563 c 137.941 628.477 147.211
 629.234 156.484 632.832 c 164.363 635.891 172.242 641.004 180.121 648.168
 c 186.414 653.887 192.703 660.914 198.992 669.25 c 204.234 676.191 209.473
 684.047 214.715 692.805 c 219.258 700.402 223.801 708.68 228.344 717.641
 c 232.395 725.629 236.445 734.16 240.496 743.23 c 244.18 751.48 247.859
 760.176 251.543 769.324 c 254.938 777.754 258.332 786.566 261.727 795.762
 c 264.891 804.328 268.055 813.23 271.219 822.457 c 273.398 828.809 275.574
 835.316 277.75 841.98 c S Q
Q Q
showpage
%%Trailer
%%EOF
